server:
  port: 8080

spring:
  profiles:
    default: local
  devtools:
    livereload:
      enabled: true # auto reload
  thymeleaf:
    enabled: false


---  #local용
spring:
  config:
    activate:
      on-profile: local

############################################
################# mariaDB ##################
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://192.168.35.180:3306/test?useUnicode=yes&characterEncoding=UTF-8
    username: test
    password: test1234

############################################
################## mongo ###################
  data:
    mongodb:
      host: 192.168.35.180
      port: 17017
      database: test

############################################
################## jpa #####################
  jpa:
    database: mysql
    # mysql 설정
#    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    # mariadb 설정
    database-platform: org.hibernate.dialect.MariaDB103Dialect
    hibernate:
      type: # 쿼리 파라미터 표기
        descriptor:
          sql: trace
#      naming: # 카멜케이스(이거 설정하면 안되네;; - 기본적으로 스네이크 케이스로 변경시켜준다고함)
#        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    properties:
      open-in-view: false
      generate-ddl: true
      show-sql: true
#      format_sql: true # sql 로그
#      use_sql_comments: true # sql 로그
    show-sql: true

####################################################
################## kafka - multi ###################
#  kafka:
#    my:
#      push:
#        topic:
#          name: chatting
#    consumer:
#      bootstrap-servers: 192.168.35.180:19092,192.168.35.180:29092,192.168.35.180:39092 # 외부 <-> 서버
#      group-id: AAA # 그룹별 메시징때문에 넣은듯...? 근데 kafka상에서 하는게 안되는거같음..
#      auto-offset-reset: earliest
#
#      # 데이터를 보낼 때, key/value를 직렬화
#      # JSON 데이터를 보낼 것이라면 JsonDeserializer
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
##      enable-auto-commit: false
#    producer:
#      bootstrap-servers: 192.168.35.180:19092,192.168.35.180:29092,192.168.35.180:39092 # 외부 <-> 서버
#      # 데이터를 보낼 때, key/value를 직렬화
#      # JSON 데이터를 보낼 것이라면 JsonDeserializer
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer

####################################################
################## kafka - single ###################
  kafka:
    my:
      push:
        topic:
          name: chatting
    consumer:
      bootstrap-servers: 192.168.35.180:19092 # 외부 <-> 서버
      group-id: AAA # 그룹별 메시징때문에 넣은듯...? 근데 kafka상에서 하는게 안되는거같음..
      auto-offset-reset: earliest

      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #      enable-auto-commit: false
    producer:
      bootstrap-servers: 192.168.35.180:19092 # 외부 <-> 서버
      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer